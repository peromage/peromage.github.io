<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Linux on undefined behavior</title><link>https://peromage.github.io/tags/linux/</link><description>Recent content in Linux on undefined behavior</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Fri, 18 Apr 2025 03:22:37 +0000</lastBuildDate><atom:link href="https://peromage.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>Perl Quick Reference</title><link>https://peromage.github.io/p/perl-quick-reference/</link><pubDate>Mon, 13 Nov 2023 15:44:00 +0000</pubDate><guid>https://peromage.github.io/p/perl-quick-reference/</guid><description>&lt;h2 id="preface">Preface&lt;/h2>
&lt;p>Perl is a powerful tool to handle text processing. However, the learning curve might be steep due to some unusual syntax. I find myself even need to revisit the doc sometimes if I don&amp;rsquo;t use it often, so this post I&amp;rsquo;ll write down some commonly used patterns when it comes to text processing. That said this post is updated from time to time so remember to come back!&lt;/p>
&lt;p>When used as a command line tool, &lt;code>perl&lt;/code> is powerful enough to replace traditional text processing tools like &lt;code>sed&lt;/code>, &lt;code>awk&lt;/code>, &lt;code>grep&lt;/code>, &lt;code>tr&lt;/code> etc.. Actually using &lt;code>perl&lt;/code> instead of &lt;code>grep&lt;/code> and &lt;code>tr&lt;/code> might be a little overkill in most cases but the functionalities of &lt;code>sed&lt;/code> and &lt;code>awk&lt;/code> can be almost replaced. I recommend someone who starts learning text processing and regex to start with Perl. The reasons are:&lt;/p></description></item><item><title>[Archive] Multiboot USB</title><link>https://peromage.github.io/p/archive-multiboot-usb/</link><pubDate>Sun, 27 Aug 2023 17:55:00 +0000</pubDate><guid>https://peromage.github.io/p/archive-multiboot-usb/</guid><description>&lt;p>Boot from any ISO file&lt;/p>
&lt;h2 id="hybrid-uefi-gpt-plus-bios-mbr-gpt-boot">Hybrid UEFI GPT + BIOS MBR/GPT boot&lt;/h2>
&lt;h3 id="preparation">Preparation&lt;/h3>
&lt;p>Create 3 partitions on a removable USB stick.&lt;/p>
&lt;ol>
&lt;li>A BIOS boot partition (gdisk type code &lt;code>EF02&lt;/code>, or GUID &lt;code>21686148-6449-6E6F-744E-656564454649&lt;/code>) with no filesystem. This partition can be put in any place on the disk but it is recommended to put it at the begginning from sector 34 to 2047. At minimal 1 MiB.&lt;/li>
&lt;li>An EFI System partition (gdisk type code &lt;code>EF00&lt;/code>) with a FAT32 filesystem. This partition can be as small as 50 MiB but it is better to set at least 256 MiB (550 MiB recommended).&lt;/li>
&lt;li>Data partition (use a filesystem supported by GRUB). This partition can take up the rest of the space of the drive.&lt;/li>
&lt;/ol>
&lt;h3 id="grub-installation">GRUB Installation&lt;/h3>
&lt;p>Mount EFI and data partitions.
First install GRUB for UEFI:&lt;/p></description></item><item><title>Minimalist's Multi-boot USB Drive</title><link>https://peromage.github.io/p/minimalists-multi-boot-usb-drive/</link><pubDate>Wed, 26 Jan 2022 20:34:00 +0000</pubDate><guid>https://peromage.github.io/p/minimalists-multi-boot-usb-drive/</guid><description>&lt;h2 id="story">Story&lt;/h2>
&lt;p>Recently I&amp;rsquo;ve realized a fact that I always have needs to keep a multi-boot USB in my pocket for either Linux or Windows installation. There are a lot tools out there already but I don&amp;rsquo;t really like them. At least, I mean, they are too flashy to me. A beautiful boot menu seems not to be attractive. What I need is just a simple and practical maybe a little ugly boot device. It should be minimalist. More importantly, it has to be easy to setup with the tools on the system already and maintainable. No funky scripts.&lt;/p></description></item><item><title>Dual-booting Windows VHD and Native Linux on a BIOS+GPT PC</title><link>https://peromage.github.io/p/dual-booting-windows-vhd-and-native-linux-on-a-bios-gpt-pc/</link><pubDate>Fri, 09 Jul 2021 16:40:00 +0000</pubDate><guid>https://peromage.github.io/p/dual-booting-windows-vhd-and-native-linux-on-a-bios-gpt-pc/</guid><description>&lt;h2 id="background">Background&lt;/h2>
&lt;p>Previously I wrote a post for this dual-boot scenario. It is a little outdated. In the past year I mostly worked in the Linux environment on my old laptop, so the Windows seems not to be a necessity which occupies a dedicated partition. However, sometimes it is still needed. That is why I started thinking to improve this setup even further.&lt;/p>
&lt;p>Starting from Windows 7, Windows supports boots from a VHD file which makes it so much easier to manage. Also you are able to create differencing disks which are pretty much like snapshots.&lt;/p></description></item><item><title>Windows+Linux双系统引导手记</title><link>https://peromage.github.io/p/windows-linux%E5%8F%8C%E7%B3%BB%E7%BB%9F%E5%BC%95%E5%AF%BC%E6%89%8B%E8%AE%B0/</link><pubDate>Wed, 05 Apr 2017 19:26:00 +0000</pubDate><guid>https://peromage.github.io/p/windows-linux%E5%8F%8C%E7%B3%BB%E7%BB%9F%E5%BC%95%E5%AF%BC%E6%89%8B%E8%AE%B0/</guid><description>&lt;h2 id="0x00-情况简述">0x00 情况简述&lt;/h2>
&lt;p>由于开发需要 Linux 环境，所以将老的那台笔记本改造成了双系统。
这台电脑的基本情况是这样的，64GB 固态硬盘 + 720GB 机械硬盘（实际可用空间有折损，这里为了表示方便），Windows 10 已经安装到了固态硬盘上。由于主板较老，只能支持 BIOS。巨硬又说过 Windows 只能支持 BIOS + MBR，所以第一块主位（Master）上的固态硬盘就只能采用 MBR 分区表，分成了两个区，500MB 用作启动分区，剩下的部分全部划给了系统分区。
但是 Linux 表示没有巨硬这种尿性，所以为什么不使用更先进的 GPT 分区表？因此从位（Slave）上的机械硬盘被我分成了这个样子：&lt;/p></description></item></channel></rss>