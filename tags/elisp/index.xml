<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Elisp on undefined behavior</title><link>https://peromage.github.io/tags/elisp/</link><description>Recent content in Elisp on undefined behavior</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 16 Mar 2023 23:17:00 +0000</lastBuildDate><atom:link href="https://peromage.github.io/tags/elisp/index.xml" rel="self" type="application/rss+xml"/><item><title>Different Ways to Write a Major Mode</title><link>https://peromage.github.io/p/different-ways-to-write-a-major-mode/</link><pubDate>Thu, 16 Mar 2023 23:17:00 +0000</pubDate><guid>https://peromage.github.io/p/different-ways-to-write-a-major-mode/</guid><description>&lt;p>This post mainly helps myself remember how to quickly write a major mode. My memory is getting worse. So sad. :(&lt;/p>
&lt;h2 id="use-define-derived-mode">Use define-derived-mode&lt;/h2>
&lt;p>Doc: &lt;a href="https://www.gnu.org/software/emacs/manual/html_node/elisp/Derived-Modes.html">https://www.gnu.org/software/emacs/manual/html_node/elisp/Derived-Modes.html&lt;/a>&lt;/p>
&lt;p>This perhaps the most common way to write a major mode.&lt;/p>
&lt;p>Most of the times I derive from &lt;code>fundamental-mode&lt;/code>, or &lt;code>nil&lt;/code> if the parent mode is not needed (a brand new mode).&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-elisp" data-lang="elisp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">;; With a parent mode&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87">define-derived-mode&lt;/span> &lt;span style="color:#000">foo-mode&lt;/span> &lt;span style="color:#000">fundamental-mode&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Foo&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87">do&lt;/span> &lt;span style="color:#000">something&lt;/span>&lt;span style="color:#000;font-weight:bold">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">;; Or nothing&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87">define-derived-mode&lt;/span> &lt;span style="color:#000">foo-mode&lt;/span> &lt;span style="color:#000">nil&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Foo&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87">do&lt;/span> &lt;span style="color:#000">something&lt;/span>&lt;span style="color:#000;font-weight:bold">))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Here is the common pattern that I use. I use &lt;code>:after-hook&lt;/code> keyword to run some additional setups after the major mode call. This is useful if some of the settings need to be overridden from the parent mode settings or its hooks.&lt;/p></description></item><item><title>Use lisp-data Files in Emacs</title><link>https://peromage.github.io/p/use-lisp-data-files-in-emacs/</link><pubDate>Mon, 14 Nov 2022 10:57:00 +0000</pubDate><guid>https://peromage.github.io/p/use-lisp-data-files-in-emacs/</guid><description>&lt;p>I found that there were few posts mentioning about using &lt;code>lisp-data&lt;/code> files. However, it seems to be used widely in various packages.&lt;/p>
&lt;p>&lt;a href="https://www.gnu.org/software/emacs/manual/html_node/elisp/Read-and-Print.html">Emacs manumal&lt;/a> has a very detailed description of how to read and write lisp objects. In this post I&amp;rsquo;ll mainly demonstrate one specific use case.&lt;/p>
&lt;h2 id="read-from-file">Read from file&lt;/h2>
&lt;p>The biggest challenge is to parse file content to Lisp lists. After a quick search with &lt;code>describe-function&lt;/code>, &lt;code>read&lt;/code> function is able to perfectly handle it in this case.&lt;/p></description></item></channel></rss>